openapi: 3.0.0
info:
  title: Sample API
  description: User API
  version: 0.1.9
servers:
  - url: http://api.example.com/v1
    description: Production
paths:
  /users:
    get:
      summary: Returns a list of users.
      description: Optional extended description in CommonMark or HTML.
      operationId: 'getUsers'
      responses:
        '200':    # status code
          description: A JSON array of user names
          content:
            application/json:
              schema:
                $ref: 'schemas/usersResponse.yml'
    post:
      summary: Creates a new user.
      operationId: 'createUser'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: 'schemas/user.yml'
      responses:
        '201':
          description: Created
  /users/{userId}:
    get:
      summary: Returns a user by ID.
      operationId: 'getUserById'
      parameters:
        - in: path
          name: id
          required: true
          schema: {
            type: integer,
            format: int32
          }
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: 'schemas/user.yml'
        '404':
          description: Not found
    put:
      summary: Replace user by ID.
      operationId: 'replaceUserById'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: 'schemas/user.yml'
      parameters:
        - in: path
          name: id
          required: true
          schema: {
            type: integer,
            format: int32
          }
      responses:
        '204':
          description: No Content
    patch:
      summary: patch user by ID.
      operationId: 'patchUserById'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: 'schemas/user.yml'
      parameters:
        - in: path
          name: id
          required: true
          schema: {
            type: integer,
            format: int32
          }
      responses:
        '204':
          description: No Content
    delete:
      summary: delete user by ID.
      operationId: 'deleteUserById'
      parameters:
        - in: path
          name: id
          required: true
          schema: {
            type: integer,
            format: int32
          }
      responses:
        '204':
          description: Deleted

  /users/{userId}/addresses:
    get:
      summary: Returns addresses of an User
      operationId: 'getUserAddresses'
      parameters:
        - in: path
          name: id
          required: true
          schema: {
            type: integer,
            format: int32
          }
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: 'schemas/addressesResponse.yml'
    post:
      summary: Creates a new address for a user.
      operationId: 'createAddressForUser'
      parameters:
        - in: path
          name: id
          required: true
          schema: {
            type: integer,
            format: int32
          }
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: 'schemas/address.yml'
      responses:
        '201':
          description: Created
  /users/{userId}/addresses/{addressId}:
    get:
      summary: Returns an user addresses by ID.
      operationId: 'getAddressOfUserById'
      parameters:
        - in: path
          name: id
          required: true
          schema: {
            type: integer,
            format: int32
          }
        - in: path
          name: addressId
          required: true
          schema: {
            type: integer,
            format: int32
          }
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: 'schemas/address.yml'
    patch:
      summary: patch address of user by ID.
      operationId: 'patchAddressOfUser'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: 'schemas/address.yml'
      parameters:
        - in: path
          name: id
          required: true
          schema: {
            type: integer,
            format: int32
          }
        - in: path
          name: addressId
          required: true
          schema: {
            type: integer,
            format: int32
          }
      responses:
        '204':
          description: No Content
